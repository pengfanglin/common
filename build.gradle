plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

bootJar.enabled = false
jar.enabled = true

group 'com.fanglin.common'
version '1.0.0'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// JVM 版本号要求
sourceCompatibility = 1.8
targetCompatibility = 1.8

def env = project.hasProperty('env') ? project.property("env") : "test"
def jarVersionSuffix = env == "pro" ? "-RELEASE" : "-SNAPSHOT"

ext {
    swaggerVersion = '2.9.2'
    poiVersion = '3.17'
    jedisVersion = '2.10.0'
    zipkinSenderOkhttp3Version = '2.8.1'
    braveInstrumentationDubboRpcVersion = '5.6.3'
    mapperVersion = '2.1.5'
    mybatisSpringbootStarterVersion = '2.1.0'
    pagehelperVersion = '1.2.12'
}

repositories {
    mavenLocal()
    maven {
        url 'http://nexus.qubaotang.cn/repository/maven-public/'
    }
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
}

dependencies {
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    testAnnotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testCompileOnly("org.projectlombok:lombok")
    compileOnly("org.projectlombok:lombok")

    implementation("io.springfox:springfox-swagger2:${swaggerVersion}")
    implementation("io.springfox:springfox-swagger-ui:${swaggerVersion}")
    implementation("io.zipkin.reporter2:zipkin-sender-okhttp3:${zipkinSenderOkhttp3Version}")
    implementation("io.zipkin.brave:brave-instrumentation-dubbo-rpc:${braveInstrumentationDubboRpcVersion}") {
        exclude module: 'dubbo'
    }
    implementation("org.apache.poi:poi:${poiVersion}")
    implementation("org.apache.poi:poi-ooxml:${poiVersion}")
    implementation("org.apache.httpcomponents:httpclient")
    implementation("redis.clients:jedis:${jedisVersion}")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-data-redis") {
        exclude module: 'lettuce-core'
    }
    implementation("com.github.pagehelper:pagehelper-spring-boot-starter:${pagehelperVersion}")
    implementation("tk.mybatis:mapper-spring-boot-starter:${mapperVersion}")
    implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringbootStarterVersion}")
    implementation("javax.servlet:javax.servlet-api")
    implementation("com.fasterxml.jackson.core:jackson-databind")
    implementation("org.springframework:spring-web")
    implementation("org.hibernate.validator:hibernate-validator")
    implementation("org.glassfish:javax.el")
}
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = 'local'
            version += jarVersionSuffix
        }
    }
    repositories {
        maven {
            name = 'nexus'
            def releasesRepoUrl = "http://nexus.qubaotang.cn/repository/maven-releases/"
            def snapshotsRepoUrl = "http://nexus.qubaotang.cn/repository/maven-snapshots/"
            url = env == 'pro' ? releasesRepoUrl : snapshotsRepoUrl
            credentials {
                username = 'admin'
                password = "123456"
            }
        }
    }
}